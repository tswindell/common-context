// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: context.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "context.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ContextElement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContextElement_reflection_ = NULL;
struct ContextElementOneofInstance {
  const ::ContextElement_Resource* resource_;
  const ::ContextElement_Link* link_;
}* ContextElement_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* ContextElement_Resource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContextElement_Resource_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContextElement_Link_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContextElement_Link_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_context_2eproto() {
  protobuf_AddDesc_context_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "context.proto");
  GOOGLE_CHECK(file != NULL);
  ContextElement_descriptor_ = file->message_type(0);
  static const int ContextElement_offsets_[4] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ContextElement_default_oneof_instance_, resource_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ContextElement_default_oneof_instance_, link_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement, test_oneof_),
  };
  ContextElement_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ContextElement_descriptor_,
      ContextElement::default_instance_,
      ContextElement_offsets_,
      -1,
      -1,
      -1,
      ContextElement_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement, _oneof_case_[0]),
      sizeof(ContextElement),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement, _is_default_instance_));
  ContextElement_Resource_descriptor_ = ContextElement_descriptor_->nested_type(0);
  static const int ContextElement_Resource_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement_Resource, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement_Resource, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement_Resource, type_),
  };
  ContextElement_Resource_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ContextElement_Resource_descriptor_,
      ContextElement_Resource::default_instance_,
      ContextElement_Resource_offsets_,
      -1,
      -1,
      -1,
      sizeof(ContextElement_Resource),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement_Resource, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement_Resource, _is_default_instance_));
  ContextElement_Link_descriptor_ = ContextElement_descriptor_->nested_type(1);
  static const int ContextElement_Link_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement_Link, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement_Link, target_),
  };
  ContextElement_Link_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ContextElement_Link_descriptor_,
      ContextElement_Link::default_instance_,
      ContextElement_Link_offsets_,
      -1,
      -1,
      -1,
      sizeof(ContextElement_Link),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement_Link, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextElement_Link, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_context_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ContextElement_descriptor_, &ContextElement::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ContextElement_Resource_descriptor_, &ContextElement_Resource::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ContextElement_Link_descriptor_, &ContextElement_Link::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_context_2eproto() {
  delete ContextElement::default_instance_;
  delete ContextElement_default_oneof_instance_;
  delete ContextElement_reflection_;
  delete ContextElement_Resource::default_instance_;
  delete ContextElement_Resource_reflection_;
  delete ContextElement_Link::default_instance_;
  delete ContextElement_Link_reflection_;
}

void protobuf_AddDesc_context_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rcontext.proto\"\331\001\n\016ContextElement\022,\n\010re"
    "source\030\001 \001(\0132\030.ContextElement.ResourceH\000"
    "\022$\n\004link\030\002 \001(\0132\024.ContextElement.LinkH\000\022\014"
    "\n\004uuid\030\003 \001(\t\0321\n\010Resource\022\n\n\002id\030\001 \001(\t\022\013\n\003"
    "key\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\032$\n\004Link\022\014\n\004name\030"
    "\001 \001(\t\022\016\n\006target\030\002 \001(\tB\014\n\ntest_oneofb\006pro"
    "to3", 243);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "context.proto", &protobuf_RegisterTypes);
  ContextElement::default_instance_ = new ContextElement();
  ContextElement_default_oneof_instance_ = new ContextElementOneofInstance();
  ContextElement_Resource::default_instance_ = new ContextElement_Resource();
  ContextElement_Link::default_instance_ = new ContextElement_Link();
  ContextElement::default_instance_->InitAsDefaultInstance();
  ContextElement_Resource::default_instance_->InitAsDefaultInstance();
  ContextElement_Link::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_context_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_context_2eproto {
  StaticDescriptorInitializer_context_2eproto() {
    protobuf_AddDesc_context_2eproto();
  }
} static_descriptor_initializer_context_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContextElement_Resource::kIdFieldNumber;
const int ContextElement_Resource::kKeyFieldNumber;
const int ContextElement_Resource::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContextElement_Resource::ContextElement_Resource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ContextElement.Resource)
}

void ContextElement_Resource::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ContextElement_Resource::ContextElement_Resource(const ContextElement_Resource& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ContextElement.Resource)
}

void ContextElement_Resource::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ContextElement_Resource::~ContextElement_Resource() {
  // @@protoc_insertion_point(destructor:ContextElement.Resource)
  SharedDtor();
}

void ContextElement_Resource::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ContextElement_Resource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContextElement_Resource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContextElement_Resource_descriptor_;
}

const ContextElement_Resource& ContextElement_Resource::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_context_2eproto();
  return *default_instance_;
}

ContextElement_Resource* ContextElement_Resource::default_instance_ = NULL;

ContextElement_Resource* ContextElement_Resource::New(::google::protobuf::Arena* arena) const {
  ContextElement_Resource* n = new ContextElement_Resource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContextElement_Resource::Clear() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ContextElement_Resource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ContextElement.Resource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ContextElement.Resource.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key;
        break;
      }

      // optional string key = 2;
      case 2: {
        if (tag == 18) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ContextElement.Resource.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // optional string type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ContextElement.Resource.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ContextElement.Resource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ContextElement.Resource)
  return false;
#undef DO_
}

void ContextElement_Resource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ContextElement.Resource)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.Resource.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.Resource.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.Resource.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:ContextElement.Resource)
}

::google::protobuf::uint8* ContextElement_Resource::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ContextElement.Resource)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.Resource.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.Resource.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.Resource.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ContextElement.Resource)
  return target;
}

int ContextElement_Resource::ByteSize() const {
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContextElement_Resource::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ContextElement_Resource* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ContextElement_Resource>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContextElement_Resource::MergeFrom(const ContextElement_Resource& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void ContextElement_Resource::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContextElement_Resource::CopyFrom(const ContextElement_Resource& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextElement_Resource::IsInitialized() const {

  return true;
}

void ContextElement_Resource::Swap(ContextElement_Resource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContextElement_Resource::InternalSwap(ContextElement_Resource* other) {
  id_.Swap(&other->id_);
  key_.Swap(&other->key_);
  type_.Swap(&other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContextElement_Resource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContextElement_Resource_descriptor_;
  metadata.reflection = ContextElement_Resource_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContextElement_Link::kNameFieldNumber;
const int ContextElement_Link::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContextElement_Link::ContextElement_Link()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ContextElement.Link)
}

void ContextElement_Link::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ContextElement_Link::ContextElement_Link(const ContextElement_Link& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ContextElement.Link)
}

void ContextElement_Link::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ContextElement_Link::~ContextElement_Link() {
  // @@protoc_insertion_point(destructor:ContextElement.Link)
  SharedDtor();
}

void ContextElement_Link::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ContextElement_Link::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContextElement_Link::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContextElement_Link_descriptor_;
}

const ContextElement_Link& ContextElement_Link::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_context_2eproto();
  return *default_instance_;
}

ContextElement_Link* ContextElement_Link::default_instance_ = NULL;

ContextElement_Link* ContextElement_Link::New(::google::protobuf::Arena* arena) const {
  ContextElement_Link* n = new ContextElement_Link;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContextElement_Link::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ContextElement_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ContextElement.Link)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ContextElement.Link.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_target;
        break;
      }

      // optional string target = 2;
      case 2: {
        if (tag == 18) {
         parse_target:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), this->target().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ContextElement.Link.target"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ContextElement.Link)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ContextElement.Link)
  return false;
#undef DO_
}

void ContextElement_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ContextElement.Link)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.Link.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string target = 2;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.Link.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target(), output);
  }

  // @@protoc_insertion_point(serialize_end:ContextElement.Link)
}

::google::protobuf::uint8* ContextElement_Link::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ContextElement.Link)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.Link.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string target = 2;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.Link.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ContextElement.Link)
  return target;
}

int ContextElement_Link::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string target = 2;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContextElement_Link::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ContextElement_Link* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ContextElement_Link>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContextElement_Link::MergeFrom(const ContextElement_Link& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
}

void ContextElement_Link::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContextElement_Link::CopyFrom(const ContextElement_Link& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextElement_Link::IsInitialized() const {

  return true;
}

void ContextElement_Link::Swap(ContextElement_Link* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContextElement_Link::InternalSwap(ContextElement_Link* other) {
  name_.Swap(&other->name_);
  target_.Swap(&other->target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContextElement_Link::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContextElement_Link_descriptor_;
  metadata.reflection = ContextElement_Link_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContextElement::kResourceFieldNumber;
const int ContextElement::kLinkFieldNumber;
const int ContextElement::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContextElement::ContextElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ContextElement)
}

void ContextElement::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  ContextElement_default_oneof_instance_->resource_ = const_cast< ::ContextElement_Resource*>(&::ContextElement_Resource::default_instance());
  ContextElement_default_oneof_instance_->link_ = const_cast< ::ContextElement_Link*>(&::ContextElement_Link::default_instance());
}

ContextElement::ContextElement(const ContextElement& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ContextElement)
}

void ContextElement::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_test_oneof();
}

ContextElement::~ContextElement() {
  // @@protoc_insertion_point(destructor:ContextElement)
  SharedDtor();
}

void ContextElement::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_test_oneof()) {
    clear_test_oneof();
  }
  if (this != default_instance_) {
  }
}

void ContextElement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContextElement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContextElement_descriptor_;
}

const ContextElement& ContextElement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_context_2eproto();
  return *default_instance_;
}

ContextElement* ContextElement::default_instance_ = NULL;

ContextElement* ContextElement::New(::google::protobuf::Arena* arena) const {
  ContextElement* n = new ContextElement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContextElement::clear_test_oneof() {
  switch(test_oneof_case()) {
    case kResource: {
      delete test_oneof_.resource_;
      break;
    }
    case kLink: {
      delete test_oneof_.link_;
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_ONEOF_NOT_SET;
}


void ContextElement::Clear() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_test_oneof();
}

bool ContextElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ContextElement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ContextElement.Resource resource = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_link;
        break;
      }

      // optional .ContextElement.Link link = 2;
      case 2: {
        if (tag == 18) {
         parse_link:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_link()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_uuid;
        break;
      }

      // optional string uuid = 3;
      case 3: {
        if (tag == 26) {
         parse_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), this->uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ContextElement.uuid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ContextElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ContextElement)
  return false;
#undef DO_
}

void ContextElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ContextElement)
  // optional .ContextElement.Resource resource = 1;
  if (has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *test_oneof_.resource_, output);
  }

  // optional .ContextElement.Link link = 2;
  if (has_link()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *test_oneof_.link_, output);
  }

  // optional string uuid = 3;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:ContextElement)
}

::google::protobuf::uint8* ContextElement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ContextElement)
  // optional .ContextElement.Resource resource = 1;
  if (has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *test_oneof_.resource_, target);
  }

  // optional .ContextElement.Link link = 2;
  if (has_link()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *test_oneof_.link_, target);
  }

  // optional string uuid = 3;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ContextElement.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ContextElement)
  return target;
}

int ContextElement::ByteSize() const {
  int total_size = 0;

  // optional string uuid = 3;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  switch (test_oneof_case()) {
    // optional .ContextElement.Resource resource = 1;
    case kResource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *test_oneof_.resource_);
      break;
    }
    // optional .ContextElement.Link link = 2;
    case kLink: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *test_oneof_.link_);
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContextElement::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ContextElement* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ContextElement>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContextElement::MergeFrom(const ContextElement& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.test_oneof_case()) {
    case kResource: {
      mutable_resource()->::ContextElement_Resource::MergeFrom(from.resource());
      break;
    }
    case kLink: {
      mutable_link()->::ContextElement_Link::MergeFrom(from.link());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void ContextElement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContextElement::CopyFrom(const ContextElement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextElement::IsInitialized() const {

  return true;
}

void ContextElement::Swap(ContextElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContextElement::InternalSwap(ContextElement* other) {
  uuid_.Swap(&other->uuid_);
  std::swap(test_oneof_, other->test_oneof_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContextElement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContextElement_descriptor_;
  metadata.reflection = ContextElement_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ContextElement_Resource

// optional string id = 1;
void ContextElement_Resource::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ContextElement_Resource::id() const {
  // @@protoc_insertion_point(field_get:ContextElement.Resource.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement_Resource::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContextElement.Resource.id)
}
 void ContextElement_Resource::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContextElement.Resource.id)
}
 void ContextElement_Resource::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContextElement.Resource.id)
}
 ::std::string* ContextElement_Resource::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ContextElement.Resource.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ContextElement_Resource::release_id() {
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement_Resource::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ContextElement.Resource.id)
}

// optional string key = 2;
void ContextElement_Resource::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ContextElement_Resource::key() const {
  // @@protoc_insertion_point(field_get:ContextElement.Resource.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement_Resource::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContextElement.Resource.key)
}
 void ContextElement_Resource::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContextElement.Resource.key)
}
 void ContextElement_Resource::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContextElement.Resource.key)
}
 ::std::string* ContextElement_Resource::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ContextElement.Resource.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ContextElement_Resource::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement_Resource::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ContextElement.Resource.key)
}

// optional string type = 3;
void ContextElement_Resource::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ContextElement_Resource::type() const {
  // @@protoc_insertion_point(field_get:ContextElement.Resource.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement_Resource::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContextElement.Resource.type)
}
 void ContextElement_Resource::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContextElement.Resource.type)
}
 void ContextElement_Resource::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContextElement.Resource.type)
}
 ::std::string* ContextElement_Resource::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ContextElement.Resource.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ContextElement_Resource::release_type() {
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement_Resource::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ContextElement.Resource.type)
}

// -------------------------------------------------------------------

// ContextElement_Link

// optional string name = 1;
void ContextElement_Link::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ContextElement_Link::name() const {
  // @@protoc_insertion_point(field_get:ContextElement.Link.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement_Link::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContextElement.Link.name)
}
 void ContextElement_Link::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContextElement.Link.name)
}
 void ContextElement_Link::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContextElement.Link.name)
}
 ::std::string* ContextElement_Link::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ContextElement.Link.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ContextElement_Link::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement_Link::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ContextElement.Link.name)
}

// optional string target = 2;
void ContextElement_Link::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ContextElement_Link::target() const {
  // @@protoc_insertion_point(field_get:ContextElement.Link.target)
  return target_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement_Link::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContextElement.Link.target)
}
 void ContextElement_Link::set_target(const char* value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContextElement.Link.target)
}
 void ContextElement_Link::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContextElement.Link.target)
}
 ::std::string* ContextElement_Link::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:ContextElement.Link.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ContextElement_Link::release_target() {
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement_Link::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:ContextElement.Link.target)
}

// -------------------------------------------------------------------

// ContextElement

// optional .ContextElement.Resource resource = 1;
bool ContextElement::has_resource() const {
  return test_oneof_case() == kResource;
}
void ContextElement::set_has_resource() {
  _oneof_case_[0] = kResource;
}
void ContextElement::clear_resource() {
  if (has_resource()) {
    delete test_oneof_.resource_;
    clear_has_test_oneof();
  }
}
 const ::ContextElement_Resource& ContextElement::resource() const {
  // @@protoc_insertion_point(field_get:ContextElement.resource)
  return has_resource()
      ? *test_oneof_.resource_
      : ::ContextElement_Resource::default_instance();
}
::ContextElement_Resource* ContextElement::mutable_resource() {
  if (!has_resource()) {
    clear_test_oneof();
    set_has_resource();
    test_oneof_.resource_ = new ::ContextElement_Resource;
  }
  // @@protoc_insertion_point(field_mutable:ContextElement.resource)
  return test_oneof_.resource_;
}
::ContextElement_Resource* ContextElement::release_resource() {
  if (has_resource()) {
    clear_has_test_oneof();
    ::ContextElement_Resource* temp = test_oneof_.resource_;
    test_oneof_.resource_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ContextElement::set_allocated_resource(::ContextElement_Resource* resource) {
  clear_test_oneof();
  if (resource) {
    set_has_resource();
    test_oneof_.resource_ = resource;
  }
  // @@protoc_insertion_point(field_set_allocated:ContextElement.resource)
}

// optional .ContextElement.Link link = 2;
bool ContextElement::has_link() const {
  return test_oneof_case() == kLink;
}
void ContextElement::set_has_link() {
  _oneof_case_[0] = kLink;
}
void ContextElement::clear_link() {
  if (has_link()) {
    delete test_oneof_.link_;
    clear_has_test_oneof();
  }
}
 const ::ContextElement_Link& ContextElement::link() const {
  // @@protoc_insertion_point(field_get:ContextElement.link)
  return has_link()
      ? *test_oneof_.link_
      : ::ContextElement_Link::default_instance();
}
::ContextElement_Link* ContextElement::mutable_link() {
  if (!has_link()) {
    clear_test_oneof();
    set_has_link();
    test_oneof_.link_ = new ::ContextElement_Link;
  }
  // @@protoc_insertion_point(field_mutable:ContextElement.link)
  return test_oneof_.link_;
}
::ContextElement_Link* ContextElement::release_link() {
  if (has_link()) {
    clear_has_test_oneof();
    ::ContextElement_Link* temp = test_oneof_.link_;
    test_oneof_.link_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ContextElement::set_allocated_link(::ContextElement_Link* link) {
  clear_test_oneof();
  if (link) {
    set_has_link();
    test_oneof_.link_ = link;
  }
  // @@protoc_insertion_point(field_set_allocated:ContextElement.link)
}

// optional string uuid = 3;
void ContextElement::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ContextElement::uuid() const {
  // @@protoc_insertion_point(field_get:ContextElement.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ContextElement.uuid)
}
 void ContextElement::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ContextElement.uuid)
}
 void ContextElement::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ContextElement.uuid)
}
 ::std::string* ContextElement::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:ContextElement.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ContextElement::release_uuid() {
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ContextElement::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:ContextElement.uuid)
}

bool ContextElement::has_test_oneof() const {
  return test_oneof_case() != TEST_ONEOF_NOT_SET;
}
void ContextElement::clear_has_test_oneof() {
  _oneof_case_[0] = TEST_ONEOF_NOT_SET;
}
ContextElement::TestOneofCase ContextElement::test_oneof_case() const {
  return ContextElement::TestOneofCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
